{"version":3,"sources":["game.ts"],"names":[],"mappings":"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","file":"game.js","sourcesContent":["///<reference path=\"3rdParty/babylon.gui.module.d.ts\" />\n///<reference path=\"plantGenerator.ts\" />\n///<reference path=\"priorityQueue.ts\" />\n\nlet SCENEPATH = \"scenes/\";\nlet FOX = \"fox.babylon\";\nlet SCALE = 100;\nlet ANIM_MERGE_RATE = 0.05;\nlet SCENERY_RECURSION = 8;\n\nlet randomNumbers: number[] = [];\nfunction seededRandom(max: number, min: number, seed: any) : number {\n  max = max || 1;\n  min = min || 0;\n\n  if (randomNumbers[seed] === undefined) {\n    randomNumbers[seed] = Math.random();\n  }\n\n  return min + randomNumbers[seed] * (max - min);\n}\n\ninterface AnimateRequest {\n  name: string;\n  loop: boolean;\n  reversed: boolean;\n  dirty?: boolean;\n  runCount?: number;\n  animation?: BABYLON.Animatable;\n  cleanup?: boolean;\n}\n\ninterface Coord {\n  x: number;\n  y: number;\n  recursion?: number;\n}\n\nfunction coordToKey(coord: Coord): string {\n  let returnVal = \"\" + coord.x + \"_\" + coord.y;\n  if (coord.recursion !== undefined) {\n    returnVal += \"_\" + coord.recursion;\n  }\n  return returnVal;\n}\n\nfunction keyToCoord(key: string): Coord {\n  let params = key.split(\"_\");\n  let returnVal: Coord;\n  returnVal.x = Number(params[0]);\n  returnVal.y = Number(params[1]);\n  if (params.length > 2) {\n    returnVal.recursion = Number(params[2]);\n  }\n  return returnVal;\n}\n\nfunction getX(node: {\"x\", \"y\"}): number {\n  return node.x;\n}\nfunction getY(node: {\"x\", \"y\"}): number {\n  return node.y;\n}\nfunction getRecursion(node: {\"x\", \"y\", \"recursion\"}): number {\n  return node.recursion;\n}\n\n/* Don't bother doing the square root of Pythagoras. Useful for comparing distances. */\nfunction distBetween(a: Coord, b: Coord): number {\n  //return Math.abs(a.x - b.x) * Math.abs(a.x - b.x) + Math.abs(a.y - b.y) * Math.abs(a.y - b.y);\n  return Math.round(1.5 * Math.sqrt((a.x - b.x) * (a.x - b.x) +\n                                  (a.y - b.y) * (a.y - b.y)));\n}\n\nclass Star {\n  private _scene: BABYLON.Scene;\n  private _scenery: Scenery;\n  private _heading: number;\n  private _headingDiff: number;\n  private _speed: number;\n  private _speedMax: number;\n  private _heightDiff: number;\n  private _debugTimer: number;\n  private _nextUpdate: number;\n  private _tick: number;\n\n  mesh: BABYLON.Mesh;\n\n  constructor(scene: BABYLON.Scene, scenery: Scenery) {\n    this._scene = scene;\n    this._scenery = scenery;\n    this._heading = 0;\n    this._headingDiff = 0.001;\n    this._speed = 10;\n    this._speedMax = 10;\n    this._heightDiff = 0;\n\n    var gl = new BABYLON.GlowLayer(\"glow\", this._scene);\n\n    let pyramidA =\n      BABYLON.MeshBuilder.CreatePolyhedron(\"pyramidA\", {type: 0, size: 1}, this._scene);\n    let pyramidB =\n      BABYLON.MeshBuilder.CreatePolyhedron(\"pyramidB\", {type: 0, size: 1}, this._scene);\n    pyramidB.rotate(BABYLON.Axis.Y, Math.PI);\n\n    let starMaterialW = new BABYLON.StandardMaterial(\"starMaterialW\", this._scene);\n    starMaterialW.emissiveColor = new BABYLON.Color3(1, 1, 1);\n    let starMaterialY = new BABYLON.StandardMaterial(\"starMaterialY\", this._scene);\n    starMaterialY.emissiveColor = new BABYLON.Color3(0.5, 1, 1);\n\n    pyramidA.material = starMaterialW;\n    pyramidB.material = starMaterialY;\n\n    this.mesh = BABYLON.Mesh.CreateBox(\"star\", 1, this._scene);\n    this.mesh.isVisible = false;\n    pyramidA.parent = this.mesh;\n    pyramidB.parent = this.mesh;\n\n    this._scene.registerBeforeRender(() => {\n      this.randomWalk();\n    });\n  }\n\n  randomWalk() : void {\n    let time = Math.round(new Date().getTime() / 1000);\n    let fps = this._scene.getEngine().getFps();\n\n    // Let fps stabilise after missing screen updates due to inactive browser tab.\n    if (time - this._tick > 1) {\n      this._nextUpdate = time + 2;\n    }\n    if (this._tick !== time) {\n      this._tick = time;\n    }\n\n    if (fps <= 0 || this._nextUpdate > time) {\n      console.log(\"Limiting star movement.\", this._nextUpdate, time);\n      fps = 60;\n    } else if (fps > 60) {\n      fps = 60;\n    } else {\n      this._nextUpdate = time;\n    }\n\n    let cellHeight =\n      this._scenery.getHeightWorld({x: this.mesh.position.x, y: this.mesh.position.z}) || 0;\n    this._heightDiff = (cellHeight - this.mesh.position.y) / 3 + 1;\n\n    let distanceToMapCenter = Math.abs(this.mesh.position.x) + Math.abs(this.mesh.position.z);\n    let angleToMapCenter = (\n      Math.atan2(this.mesh.position.x, this.mesh.position.z) + Math.PI) % (2 * Math.PI);\n\n    let angleDiff = angleToMapCenter - this._heading;\n    let biasToCenter = 0;\n    if (angleDiff <= Math.PI) {\n      biasToCenter = (angleDiff < 0) ? -0.0001 : 0.0001;\n    } else {\n      biasToCenter = (angleDiff > 0) ? -0.0001 : 0.0001;\n    }\n    biasToCenter *= (60 / fps);\n    biasToCenter *= distanceToMapCenter / 10;\n\n    this._headingDiff /= (1.01 * 60 / fps);\n    this._headingDiff += biasToCenter;\n    this._headingDiff += (Math.random() - 0.5) / fps;\n    this.turn(this._headingDiff);\n    this.moveForwards(fps);\n\n    if (time % 60 === 0 && time !== this._debugTimer) {\n      console.log(this.mesh.position.x, this.mesh.position.y, this.mesh.position.z);\n      this._debugTimer = time;\n    }\n  }\n\n  moveForwards(fps: number) : void {\n    this.mesh.position.x += this._speed * Math.sin(this._heading) / fps;\n    this.mesh.position.z += this._speed * Math.cos(this._heading) / fps;\n\n    this.mesh.position.y += this._speed * this._heightDiff / (2 * fps);\n  }\n\n  turn(angle: number) : void {\n    this._heading += angle;\n    if (this._heading < 0) {\n      this._heading += 2 * Math.PI;\n    }\n    if (this._heading > 2 * Math.PI) {\n      this._heading -= 2 * Math.PI;\n    }\n  }\n\n  modifySpeed(diff: number) : void {\n    this._speed += diff;\n    if (this._speed < 0) {\n      this._speed = 0;\n    }\n    if (this._speed > this._speedMax) {\n      this._speed = this._speedMax;\n    }\n  }\n}\n\nclass Character {\n  private _scene: BABYLON.Scene;\n  private _shaddows: BABYLON.ShadowGenerator;\n  private _mesh: BABYLON.Mesh;\n  private _skeleton: BABYLON.Skeleton;\n  private _bones: {[id: string] : BABYLON.Bone};\n  private _onLoaded: () => void;\n  private _lookAt: BABYLON.Vector3;\n  private _lookAtNeck: BABYLON.Vector3;\n  private _lookCtrlHead: BABYLON.BoneLookController;\n  private _lookCtrlNeck: BABYLON.BoneLookController;\n  private _animations: {[id: string] : BABYLON.AnimationRange};\n  private _animationQueue: AnimateRequest[];\n  private _animationCurrent: AnimateRequest;\n  private _animationLast: AnimateRequest;\n  private _animationObservable: BABYLON.Observer<BABYLON.Scene>;\n\n  position: BABYLON.Vector3;\n  rotation: BABYLON.Vector3;\n\n  constructor(scene: BABYLON.Scene,\n              shaddows: BABYLON.ShadowGenerator,\n              filename: string,\n              onLoaded?: () => void) {\n    console.log(\"Creating Character from \" + filename);\n    this._scene = scene;\n    this._shaddows = shaddows;\n    this._onLoaded = onLoaded;\n    this._bones = {};\n    this._lookAtNeck = new BABYLON.Vector3(0, 0, 0);\n    this._animations = {};\n    this._animationQueue = [];\n    BABYLON.SceneLoader.ImportMesh(\"\", SCENEPATH, filename, this._scene, this.onSceneLoad.bind(this));\n  }\n\n  onSceneLoad(meshes: BABYLON.Mesh[], particleSystems: [], skeletons: BABYLON.Skeleton[]) : void {\n    try {\n      console.assert(meshes.length === 1);\n      console.assert(particleSystems.length === 0);\n      console.assert(skeletons.length === 1);\n\n      this._mesh = meshes[0];\n      this._skeleton = skeletons[0];\n\n      // this._mesh.isVisible = false;\n\n      this.position = this._mesh.position;\n      this.rotation = this._mesh.rotation;\n      //this._mesh.scaling = new BABYLON.Vector3(SCALE, SCALE, SCALE);\n      //this._mesh.receiveShadows = true;\n      //this._mesh.convertToFlatShadedMesh();\n\n      this._mesh.material.zOffset = - 100;\n\n      if (this._shaddows) {\n        this._shaddows.getShadowMap().renderList.push(this._mesh);\n      }\n\n        /*let skeletonViewer = new BABYLON.Debug.SkeletonViewer(this._skeleton, this._mesh, this._scene);\n      skeletonViewer.isEnabled = true; // Enable it\n      skeletonViewer.color = BABYLON.Color3.Red(); // Change default color from white to red*/\n\n      // Parse all bones and store any we need later for future access.\n      for (let index = 0; index < this._skeleton.bones.length; index++) {\n        let bone = skeletons[0].bones[index];\n        // console.log(bone.uniqueId, bone.id);\n        switch (bone.id) {\n          case \"spine.head\":\n            this._bones.head = bone;\n            break;\n          case \"spine.neck\":\n            this._bones.neck = bone;\n            break;\n          case \"spine.upper\":\n            this._bones.spineupper = bone;\n            break;\n          case \"spine.point\":\n            this._bones.headPoint = bone;\n            break;\n        }\n      }\n\n      // Animations\n      for (let a = 0; a < this._skeleton.getAnimationRanges().length; a++) {\n        let animation = this._skeleton.getAnimationRanges()[a];\n        //console.log(a, animation.name);\n        this._animations[animation.name] = this._skeleton.getAnimationRanges()[a];\n      }\n      this._animationQueue.push({name: \"walk\", loop: true, reversed: false});\n\n      this._lookCtrlHead = new BABYLON.BoneLookController(\n        this._mesh,\n        this._bones.head,\n        this._lookAt,\n        {adjustPitch: Math.PI / 2}\n      );\n      this._lookCtrlNeck = new BABYLON.BoneLookController(\n        this._mesh,\n        this._bones.neck,\n        this._lookAtNeck,\n        {adjustPitch: Math.PI / 2}\n      );\n\n      // Periodic updates.\n      this._scene.registerBeforeRender(() => {\n        if (! this.position.equals(this._mesh.position)) {\n          this._mesh.position.x = this.position.x;\n          this._mesh.position.y = this.position.y;\n          this._mesh.position.z = this.position.z;\n        }\n        if (! this.rotation.equals(this._mesh.rotation)) {\n          this._mesh.rotation.x = this.rotation.x;\n          this._mesh.rotation.y = this.rotation.y;\n          this._mesh.rotation.z = this.rotation.z;\n        }\n\n        this._playAnimation();\n      });\n\n      if (this._onLoaded) {\n        this._onLoaded();\n      }\n\n    } catch (error) {\n      // Prevent error messages in this section getting swallowed by Babylon.\n      console.error(error);\n    }\n  }\n\n  lookAt(target: BABYLON.Vector3) : void {\n    this._lookAt = target;\n\n    this._scene.registerBeforeRender(function() {\n      // The neck should pint half way between straight forward and the\n      // direction the head is pointing.\n      let spineUpper = this._bones.spineupper;\n\n      let targetLocal = spineUpper.getLocalPositionFromAbsolute(target, this._mesh);\n      let targetLocalXY = new BABYLON.Vector3(targetLocal.x, targetLocal.y, 0);\n      let targetLocalYZ = new BABYLON.Vector3(0, targetLocal.y, targetLocal.z);\n      let aheadLocal = new BABYLON.Vector3(0, targetLocal.length(), 0);  // (l/r, f/b, u/d)\n\n      let angleXY = BABYLON.Vector3.GetAngleBetweenVectors(\n        targetLocalXY, aheadLocal, new BABYLON.Vector3(0, 0, 1));\n      let angleYZ = BABYLON.Vector3.GetAngleBetweenVectors(\n        targetLocalYZ, aheadLocal, new BABYLON.Vector3(- 1, 0, 0));\n\n      let lookAtNeckLocal =\n        new BABYLON.Vector3(Math.sin(angleXY / 2) * targetLocalXY.length(),\n                            (Math.cos(angleXY / 2) * targetLocalXY.length() +\n                             Math.cos(angleYZ / 2) * targetLocalYZ.length()) / 2,\n                            Math.sin(angleYZ / 2) * targetLocalYZ.length());\n      spineUpper.getAbsolutePositionFromLocalToRef(lookAtNeckLocal, this._mesh, this._lookAtNeck);\n\n      if (angleXY > -Math.PI / 2 && angleXY < Math.PI / 2 &&\n         angleYZ > -Math.PI / 2 && angleYZ < Math.PI / 2) {\n        // Only look at thing if it's not behind us.\n        //this._lookCtrlNeck.update();\n        //this._lookCtrlHead.update();\n        this._bones.neck.rotate(BABYLON.Axis.Z, -angleXY / 2, BABYLON.Space.LOCAL);\n        this._bones.neck.rotate(BABYLON.Axis.X, angleYZ / 3, BABYLON.Space.LOCAL);\n        this._bones.neck.rotate(BABYLON.Axis.Y, -angleYZ * angleXY / (2 * Math.PI), BABYLON.Space.LOCAL);\n\n        this._bones.head.rotate(BABYLON.Axis.Z, -angleXY / 2, BABYLON.Space.LOCAL);\n        this._bones.head.rotate(BABYLON.Axis.X, angleYZ / 3, BABYLON.Space.LOCAL);\n        this._bones.head.rotate(BABYLON.Axis.Y, -angleYZ * angleXY / (2 * Math.PI), BABYLON.Space.LOCAL);\n      }\n    }.bind(this));\n  }\n\n  /* Add animation to the list to be played. */\n  queueAnimation(animateRequest: AnimateRequest) : void {\n    this._animationQueue.push(animateRequest);\n  }\n\n  /* Pull new animations from queue and clean up finished animations.\n   *\n   * When _animationCurrent has ended, check _animationQueue for next animation.\n   * If _animationLast.cleanup is set, stop the animation and delete.\n   */\n  private _playAnimation() : void {\n    if (this._animationLast === undefined && this._animationQueue.length > 0) {\n      this._animationLast = this._animationCurrent;\n      this._animationCurrent = this._animationQueue.shift();\n      console.log(\"New: \" + this._animationCurrent.name);\n      this._animationCurrent.runCount = 0;\n    }\n    this._serviceAnimation(this._animationCurrent, true);\n    this._serviceAnimation(this._animationLast, false);\n\n    if (this._animationLast && this._animationLast.cleanup) {\n      this._animationLast.animation.stop();\n      this._animationLast.animation = undefined;\n      this._animationLast = undefined;\n    }\n  }\n\n  /* Update an AnimateRequest.\n   *\n   * This will be called periodically for any active AnimateRequest.\n   * If it is the first time this is run for an AnimateRequest the animation\n   * will be started and given greater weight each time this method is called\n   * thereafter.\n   * Args:\n   *   animateRequest: The AnimateRequest object to act upon.\n   *   current: If true, the animation weight will be increased with each call\n   *     (to a mavimum value of 1).\n   *     If false, the animation weight will be decreased with each call until\n   *     it reaches 0 at which time the animation will be stopped and\n   *     AnimateRequest.cleanup will be set.\n   */\n  private _serviceAnimation(animateRequest: AnimateRequest, current: boolean) : void {\n    if (animateRequest === undefined) {\n      return;\n    }\n\n    let weight = animateRequest.runCount ? animateRequest.animation.weight : 0;\n    if (current && weight < 1) {\n      weight += ANIM_MERGE_RATE;\n      weight = Math.min(1, weight);\n    } else if (!current && weight > 0) {\n      weight -= ANIM_MERGE_RATE;\n      weight = Math.max(0, weight);\n    }\n\n    if (animateRequest.animation) {\n      animateRequest.animation.weight = weight;\n    }\n\n    if (weight <= 0) {\n      // This old AnimateRequest has been faded out and needs stopped and removed.\n      animateRequest.cleanup = true;\n      return;\n    }\n\n    if (animateRequest.dirty === false) {\n      // Nothing more to do.\n      // Animations which end set animateRequest.dirty to true when they need\n      // this method to continue past this point.\n      return;\n    }\n\n    // console.log(animateRequest.name, weight, current);\n\n    if (animateRequest.runCount && !animateRequest.loop && animateRequest.reversed) {\n      // Freeze frame at first frame in sequence.\n      animateRequest.animation.stop();\n      animateRequest.animation = this._scene.beginWeightedAnimation(\n        this._skeleton,\n        this._animations[animateRequest.name].from + 2,\n        this._animations[animateRequest.name].from + 2,\n        weight,\n        false,\n        0.01,\n        function() {\n          animateRequest.dirty = true;\n        }.bind(this)\n      );\n    } else if (animateRequest.runCount && !animateRequest.loop) {\n      // Freeze frame at last frame in sequence.\n      animateRequest.animation.stop();\n      animateRequest.animation = this._scene.beginWeightedAnimation(\n        this._skeleton,\n        this._animations[animateRequest.name].to,\n        this._animations[animateRequest.name].to,\n        weight,\n        false,\n        0.01,\n        function() {\n          animateRequest.dirty = true;\n        }.bind(this)\n      );\n    } else if (animateRequest.reversed) {\n      // Play an animation in reverse.\n      animateRequest.animation = this._scene.beginWeightedAnimation(\n        this._skeleton,\n        this._animations[animateRequest.name].to,\n        this._animations[animateRequest.name].from + 2,\n        weight,\n        false,\n        1,\n        function() {\n          animateRequest.dirty = true;\n        }.bind(this)\n      );\n    } else {\n      // Play an animation.\n      animateRequest.animation = this._scene.beginWeightedAnimation(\n        this._skeleton,\n        this._animations[animateRequest.name].from + 2,\n        this._animations[animateRequest.name].to,\n        weight,\n        false,\n        1,\n        function() {\n          animateRequest.dirty = true;\n        }.bind(this)\n      );\n    }\n\n    animateRequest.dirty = false;\n    animateRequest.runCount++;\n  }\n}\n\nclass MapCell implements Coord {\n  x: number;\n  y: number;\n  recursion: number;\n  vegetation: number;\n  maxHeight: number;\n  minHeight: number;\n  pathScore: number;\n\n  constructor(coord: Coord, vegetation: number) {\n    this.x = coord.x;\n    this.y = coord.y;\n    this.recursion = coord.recursion;\n    this.vegetation = vegetation;\n  }\n\n  parentCoordinates(depth: number) : Coord {\n    let pX = 0;\n    let pY = 0;\n    for (let bit = depth - 1; bit >= depth - this.recursion + 1; bit--) {\n      let mask = 1 << bit;\n      if (mask & this.x) {\n        pX |= mask;\n      }\n      if (mask & this.y) {\n        pY |= mask;\n      }\n      //console.log(bit, mask, pX, pY);\n    }\n\n    return {x: pX, y: pY, recursion: this.recursion - 1};\n  }\n}\n\nclass Scenery {\n  private _scene: BABYLON.Scene;\n  private _shaddows: BABYLON.ShadowGenerator;\n  private _ground: BABYLON.Mesh;\n  private _mapSize: number;\n  private _maxRecursion: number;\n  private _treeRecursion: number;\n  private _cells: MyMap<Coord, MapCell>;\n  private _groundCoverTypes: BABYLON.StandardMaterial[];\n  private _groundCover: {[key: string]: boolean};\n  private _treeSpecies: number;\n  private readonly _mapSpacing: number = 1;\n  private readonly _treeScale: number = 200;\n  private readonly _treeSeedValue: number = 75;\n  private readonly _headroom: number = 2;\n\n  constructor(scene: BABYLON.Scene,\n              shaddows: BABYLON.ShadowGenerator,\n              ground: BABYLON.Mesh,\n              size: number) {\n    console.log(\"Mesh count before creating scenery: %c\" +\n                scene.meshes.length.toString(),\n                \"background: orange; color: white\");\n    this._scene = scene;\n    this._shaddows = shaddows;\n    this._ground = ground;\n    this._groundCover = {};\n    this._mapSize = size;\n    this._maxRecursion = Math.floor(Math.log(this._mapSize) / Math.log(2));\n    this._treeRecursion = this._maxRecursion - 3;\n\n    console.assert(Math.pow(2, this._maxRecursion) === this._mapSize &&\n                   Boolean(\"Map size is not a power of 2.\"));\n\n    this._cells = new MyMap<Coord, MapCell>(getX, getY, getRecursion);\n\n    this._setVegetationHeights();\n    this._plantTrees();\n\n    //this._shaddows.getShadowMap().renderList.push(this._trees);\n  }\n\n  // Assign \"vegetation\" values to map cells which dictates how large plants are.\n  private _setVegetationHeights() {\n    for (let recursion = 0; recursion <= this._maxRecursion; recursion++) {\n      let tileSize = Math.pow(2, this._maxRecursion - recursion);\n      // console.log(tileSize, recursion);\n      for (let x = 0; x < this._mapSize; x += tileSize) {\n        for (let y = 0; y < this._mapSize; y += tileSize) {\n          if (this.getCell({x, y, recursion}) === undefined) {\n            let parentCell = this.getCellParent({x, y, recursion});\n            if (parentCell === undefined) {\n              this.setCell({x, y, recursion}, this._treeSeedValue);\n            } else if (recursion === this._treeRecursion &&\n                      x <= this._mapSize / 2 && x >= this._mapSize / 2 - tileSize &&\n                      y <= this._mapSize / 2 && y >= this._mapSize / 2 - tileSize) {\n              // Center of map should always be empty.\n              this.setCell({x, y, recursion}, 0);\n            } else if (recursion === this._treeRecursion &&\n                      (x < 4 * tileSize ||\n                       y < 4 * tileSize ||\n                       x >= this._mapSize - 4 * tileSize ||\n                       y >= this._mapSize - 4 * tileSize)) {\n              // Dense vegetation round edge.\n              this.setCell({x, y, recursion}, Math.random() * this._treeSeedValue * 2);\n            } else if (recursion > this._treeRecursion) {\n              this.setCell({x, y, recursion}, 0);\n            } else {\n              let seed = \"\" + parentCell.x + \"_\" + parentCell.y;\n              let childMod = [\n                seededRandom(500, 1000, seed),\n                seededRandom(500, 1000, seed + \"_1\"),\n                seededRandom(500, 1000, seed + \"_2\"),\n                seededRandom(500, 1000, seed + \"_3\")];\n              let childModTotal = childMod.reduce((total, num) => { return total + num; });\n              childMod.forEach((vegetation, index, array) => { array[index] /= childModTotal; });\n              let childIndex = ((x - parentCell.x) + 2 * (y - parentCell.y)) / tileSize;\n\n              this.setCell({x, y, recursion},\n                parentCell.vegetation * childMod[childIndex] * 4);\n            }\n          }\n        }\n      }\n    }\n    console.log(\"Cell count: \", this._cells.length);\n  }\n\n  private _findClosestSpace(coord: Coord, height: number): Coord {\n    let neighbours: PriorityQueue<Coord> = new PriorityQueue<Coord>(getX, getY);\n    let visited: {[key: string]: boolean} = {};\n    neighbours.push(coord, 0);\n\n    while (neighbours.length) {\n      let working = neighbours.popLow();\n      visited[coordToKey(working)] = true;\n      if (this.getCell(working).minHeight === undefined ||\n         this.getCell(working).minHeight >= height) {\n        console.log(\"in: \", coordToKey(coord), \"\\tout: \", coordToKey(working));\n        return working;\n      }\n\n      if (working.x > 0) {\n        let node = {\"x\": working.x - 1, \"y\": working.y, \"recursion\": this._maxRecursion};\n        if (!visited[coordToKey(node)]) {\n          neighbours.push(node, distBetween(working, coord));\n        }\n      }\n      if (working.x < this._mapSize - 1) {\n        let node = {\"x\": working.x + 1, \"y\": working.y, \"recursion\": this._maxRecursion};\n        if (!visited[coordToKey(node)]) {\n          neighbours.push(node, distBetween(working, coord));\n        }\n      }\n      if (working.y > 0) {\n        let node = {\"x\": working.x, \"y\": working.y - 1, \"recursion\": this._maxRecursion};\n        if (!visited[coordToKey(node)]) {\n          neighbours.push(node, distBetween(working, coord));\n        }\n      }\n      if (working.y < this._mapSize - 1) {\n        let node = {\"x\": working.x, \"y\": working.y + 1, \"recursion\": this._maxRecursion};\n        if (!visited[coordToKey(node)]) {\n          neighbours.push(node, distBetween(working, coord));\n        }\n      }\n    }\n    console.log(visited.length);\n    console.log(\"in: \", coordToKey(coord), \"\\tout: \", undefined);\n    return undefined;\n  }\n\n  calculatePath(start: Coord, destination: Coord) : boolean {\n    console.time(\"calculatePath\");\n\n    let reachedDestination = false;\n    start.recursion = this._maxRecursion;\n    destination.recursion = this._maxRecursion;\n\n    let startAdjusted = this.getCell(\n      this._findClosestSpace(start, this._headroom));\n    let destinationAdjusted = this.getCell(\n      this._findClosestSpace(destination, this._headroom));\n\n    destinationAdjusted.pathScore = 0;\n\n    let neighbours: PriorityQueue<MapCell> =\n      new PriorityQueue<MapCell>(getX, getY);\n    neighbours.push(destinationAdjusted, 0);\n\n    while (neighbours.length) {\n      let working: MapCell = neighbours.popLow();\n\n      if (working.x === startAdjusted.x && working.y === startAdjusted.y) {\n        reachedDestination = true;\n        break;\n      }\n\n      let adjacent: MapCell[] = new Array(4);\n      if (working.x > 0) {\n        adjacent[0] = this.getCell(\n          {\"x\": working.x - 1, \"y\": working.y, \"recursion\": this._maxRecursion});\n      }\n      if (working.x < this._mapSize - 1) {\n        adjacent[1] = this.getCell(\n          {\"x\": working.x + 1, \"y\": working.y, \"recursion\": this._maxRecursion});\n      }\n      if (working.y > 0) {\n        adjacent[2] = this.getCell(\n          {\"x\": working.x, \"y\": working.y - 1, \"recursion\": this._maxRecursion});\n      }\n      if (working.y < this._mapSize - 1) {\n        adjacent[3] = this.getCell(\n          {\"x\": working.x, \"y\": working.y + 1, \"recursion\": this._maxRecursion});\n      }\n      adjacent.forEach((a) => {\n        if (a !== undefined &&\n           (a.minHeight > this._headroom || a.minHeight === undefined)) {\n          if (a.pathScore === undefined) {\n            a.pathScore = working.pathScore + 1;\n            neighbours.push(a, a.pathScore + distBetween(a, startAdjusted));\n          } else {\n            a.pathScore = Math.min(a.pathScore, working.pathScore + 1);\n          }\n        }\n      });\n    }\n\n    /*for (let y = 0; y < this._mapSize; y++) {\n      let line = \"\";\n      for (let x = 0; x < this._mapSize; x++) {\n        let node = this.getCell({x, y, \"recursion\": this._maxRecursion});\n        let val = \"\" + node.pathScore;\n        if (val === \"undefined\") {\n          val = \" \";\n          if (this.getCell(node).minHeight <= this._headroom) {\n            val = \"#\";\n          }\n        } else {\n          val = \".\";\n          let pathNode = BABYLON.MeshBuilder.CreateSphere(\"path_\" + x + \"_\" + y, {}, this._scene);\n          pathNode.position.x = this.mapToWorld(node).x;\n          pathNode.position.y = 0;\n          pathNode.position.z = this.mapToWorld(node).y;\n        }\n        if (x === start.x && y === start.y) { val = \"*\"; }\n        if (x === startAdjusted.x && y === startAdjusted.y) { val = \"(*)\"; }\n        if (y < 50 && x < 150) {\n          line += val;\n        }\n      }\n      if (y < 50) {\n        console.log(line);\n      }\n    }*/\n    console.timeEnd(\"calculatePath\");\n    console.log(\"Sucessfull: \", reachedDestination);\n    return reachedDestination;\n  }\n\n  private _plantTrees() : void {\n    console.log(\"Planting trees.\");\n\n    let nursery = new Nursery(this._scene, 15, 15);\n\n    this._groundCoverTypes = [];\n    this._groundCoverTypes.push(this._createGroundCover());\n    this._groundCoverTypes.push(this._createGroundCover());\n    this._groundCoverTypes.push(this._createGroundCover());\n    this._groundCoverTypes.push(this._createGroundCover());\n    this._groundCoverTypes.push(this._createGroundCover());\n    this._groundCoverTypes.push(this._createGroundCover());\n    this._groundCoverTypes.push(this._createGroundCover());\n    this._groundCoverTypes.push(this._createGroundCover());\n\n    let trees = [];\n    let tileSize = Math.pow(2, this._maxRecursion - this._treeRecursion);\n    for (let x = 0; x < this._mapSize; x += tileSize) {\n      for (let y = 0; y < this._mapSize; y += tileSize) {\n        let cell = this.getCell({x, y, recursion: this._treeRecursion});\n        let scale = cell.vegetation / this._treeScale;\n        let tree: BABYLON.Mesh;\n        if (cell.vegetation > 80) {\n          tree = nursery.getTree(x, y);\n        } else if (cell.vegetation > 50) {\n          tree = nursery.getShrub(x, y);\n        }\n        if (tree !== undefined) {\n          let jitterX = Math.round(Math.random() * 8 - 4);\n          let jitterY = Math.round(Math.random() * 8 - 4);\n          tree.position.x = (\n            (x + jitterX) - this._mapSize / 2) * this._mapSpacing;\n          tree.position.y = 0;\n          tree.position.z = (\n            (y + jitterY) - this._mapSize / 2) * this._mapSpacing;\n          tree.scaling = new BABYLON.Vector3(scale, scale, scale);\n          trees.push(tree);\n\n          let leaves = tree.getChildMeshes(true, (mesh) => {\n            return mesh.name.split(\".\")[1] === \"leaves\";\n            })[0].getBoundingInfo().boundingBox;\n          let leavesTop = leaves.maximumWorld.y * scale;\n          let leavesBottom = leaves.minimumWorld.y * scale;\n          let xMin = (leaves.minimumWorld.x / this._mapSpacing) * scale;\n          let xMax = (leaves.maximumWorld.x / this._mapSpacing) * scale;\n          let yMin = (leaves.minimumWorld.z / this._mapSpacing) * scale;\n          let yMax = (leaves.maximumWorld.z / this._mapSpacing) * scale;\n          //for (let xx = Math.ceil(xMin + jitterX); xx <= Math.floor(xMax + jitterX); xx++) {\n          for (let xx = Math.floor(xMin + jitterX); xx <= Math.ceil(xMax + jitterX); xx++) {\n            //for (let yy = Math.ceil(yMin + jitterY); yy <= Math.floor(yMax + jitterY); yy++) {\n            for (let yy = Math.floor(yMin + jitterY); yy <= Math.ceil(yMax + jitterY); yy++) {\n              let c = this.getCell({x: xx + x, y: yy + y, recursion: this._maxRecursion});\n              if (c && (c.maxHeight === undefined || c.maxHeight < leavesTop)) {\n                c.maxHeight = leavesTop;\n              }\n              if (c && (c.minHeight > leavesBottom || c.minHeight === undefined)) {\n                c.minHeight = leavesBottom;\n              }\n            }\n          }\n          let c = this.getCell({x, y, recursion: this._maxRecursion});\n          if (c && (c.minHeight === undefined || c.minHeight > leavesBottom)) {\n            c.minHeight = leavesBottom;\n          }\n\n          let trunk = tree.getChildMeshes(true, (mesh) => {\n            return mesh.name.split(\".\")[1] === \"trunk\";\n          })[0];\n          if (trunk) {\n            let trunkBB = trunk.getBoundingInfo().boundingBox;\n            let xMinT = Math.round(trunkBB.minimumWorld.x * scale / this._mapSpacing);\n            let xMaxT = Math.round(trunkBB.maximumWorld.x * scale / this._mapSpacing);\n            let yMinT = Math.round(trunkBB.minimumWorld.z * scale / this._mapSpacing);\n            let yMaxT = Math.round(trunkBB.maximumWorld.z * scale / this._mapSpacing);\n            for (let xx = Math.ceil(xMinT + jitterX); xx <= Math.floor(xMaxT + jitterX); xx++) {\n              for (let yy = Math.ceil(yMinT + jitterY); yy <= Math.floor(yMaxT + jitterY); yy++) {\n                let c = this.getCell({x: xx + x,\n                                      y: yy + y,\n                                      recursion: this._maxRecursion});\n                if (c) {\n                  c.minHeight = 0;\n                }\n              }\n            }\n          }\n\n          // console.log(xMin, xMax, yMin, yMax);\n          /*let testTreetop = BABYLON.MeshBuilder.CreateBox(\"test\",\n            {\"width\": (xMax - xMin) * this._mapSpacing,\n             \"height\": leavesTop - leavesBottom,\n             \"depth\": (yMax - yMin) * this._mapSpacing},\n            this._scene);\n          var material = new BABYLON.StandardMaterial(\"myMaterial\", this._scene);\n          material.diffuseColor = new BABYLON.Color3(1, 0, 0);\n          //material.wireframe = true;\n          material.alpha = 0.5;\n          testTreetop.material = material;\n          testTreetop.position.x = (x + jitterX - this._mapSize / 2) * this._mapSpacing;\n          testTreetop.position.y = (leavesTop + leavesBottom) / 2;\n          testTreetop.position.z = (y + jitterY - this._mapSize / 2) * this._mapSpacing;*/\n\n          this._applyGroundCover((x - this._mapSize / 2) * this._mapSpacing,\n            (y - this._mapSize / 2) * this._mapSpacing);\n\n        }\n      }\n    }\n    console.log(\"Done planting\");\n\n    /*for (let x = 0; x < this._mapSize; x++) {\n      for (let y = 0; y < this._mapSize; y++) {\n        let cell = this.getCell({x, y, recursion: this._maxRecursion});\n        if (cell.minHeight !== undefined) {\n          //let leavesTop = cell.maxHeight;\n          let leavesTop = cell.minHeight;\n          let testTreetop = BABYLON.MeshBuilder.CreatePlane(\n            \"test\" + x + \"_\" + y + \" \" + this._maxRecursion,\n            {size: 1 * this._mapSpacing, sideOrientation: BABYLON.Mesh.DOUBLESIDE},\n            this._scene);\n          testTreetop.rotation.x = Math.PI / 2;\n          testTreetop.position.x = (x - this._mapSize / 2) * this._mapSpacing;\n          testTreetop.position.y = leavesTop;\n          testTreetop.position.z = (y - this._mapSize / 2) * this._mapSpacing;\n        }\n      }\n    }*/\n\n    // Don't need the prototypes any more so delete them.\n    nursery.dispose();\n\n    console.log(\"Consolidating trees.\");\n    this._consolidateTrees(trees);\n  }\n\n  worldToMap(coord: Coord) : Coord {\n    let x = Math.round(coord.x / this._mapSpacing + this._mapSize / 2);\n    let y = Math.round(coord.y / this._mapSpacing + this._mapSize / 2);\n    let recursion = coord.recursion;\n    if (recursion === undefined) {\n      recursion = this._maxRecursion;\n    }\n    return {x, y, recursion};\n  }\n\n  mapToWorld(coord: Coord) : Coord {\n    let x = Math.round(coord.x * this._mapSpacing - this._mapSize / 2);\n    let y = Math.round(coord.y * this._mapSpacing - this._mapSize / 2);\n    let recursion = coord.recursion;\n    if (recursion === undefined) {\n      recursion = this._maxRecursion;\n    }\n    return {x, y, recursion};\n  }\n\n  setCell(coord: Coord, vegetation: number) : void {\n    let cell = new MapCell(coord, vegetation);\n    this._cells.put(cell, cell);\n  }\n\n  getCell(coord: Coord) : MapCell {\n    if (coord.recursion === - 1) {\n      return this._cells.get({\"x\": 0, \"y\": 0, \"recursion\": 0});\n    }\n    return this._cells.get(coord);\n  }\n\n  getHeightWorld(coord: Coord) : number {\n    let cell = this.getCellWorld(coord);\n    if (!cell) {\n      return 0;\n    }\n    return cell.maxHeight;\n  }\n\n  getCellWorld(coord: Coord) : MapCell {\n    return this.getCell(this.worldToMap(coord));\n  }\n\n  getCellParent(coord: Coord) : MapCell {\n    let cell = this.getCell(coord);\n    if (cell === undefined) {\n      return this.getCell(new MapCell(coord, - 1).parentCoordinates(this._maxRecursion));\n    }\n    return this.getCell(cell.parentCoordinates(this._maxRecursion));\n  }\n\n  private _consolidateTrees(trees: BABYLON.Mesh[]) : void {\n    console.log(\"Mesh count before _consolidateTrees: %c\" +\n                this._scene.meshes.length.toString(),\n                \"background: orange; color: white\");\n\n    let countStart = 0;\n    let countFinal = 0;\n\n    let treeFoliageBucket = new Array(this._treeSpecies).fill(undefined);\n    let treeTrunkBucket = new Array(this._treeSpecies).fill(undefined);\n    trees.forEach((tree) => {\n      // Collect the different tree species together in 2 collections:\n      // trunks and leaves.\n      let treeIndex = parseInt(tree.name.split(\"_\")[1], 10);\n      if (treeFoliageBucket[treeIndex] === undefined || treeTrunkBucket == undefined) {\n        treeFoliageBucket[treeIndex] = [];\n        treeTrunkBucket[treeIndex] = [];\n      }\n      tree.getChildMeshes(true).forEach((node) => {\n        let nodeName = node.name.split(\".\")[1];\n        if (nodeName === \"leaves\") {\n          let pos = node.getAbsolutePosition();\n          node.setParent(null);\n          node.setAbsolutePosition(pos);\n          treeFoliageBucket[treeIndex].push(node);\n        } else if (nodeName === \"trunk\") {\n          let pos = node.getAbsolutePosition();\n          node.setParent(null);\n          node.setAbsolutePosition(pos);\n          treeTrunkBucket[treeIndex].push(node);\n        } else {\n          console.log(nodeName);\n          console.assert(false && \"Unknown tree component\");\n        }\n      });\n      // We have the component parts so don't need the original tree anymore.\n      tree.dispose();\n    });\n\n    // Combine all trunks of the same species together.\n    treeTrunkBucket.forEach((bucket) => {\n      if (bucket && bucket.length) {\n        countStart += bucket.length;\n        countFinal++;\n        let t = BABYLON.Mesh.MergeMeshes(bucket, true, true, null, true);\n        // this._shaddows.getShadowMap().renderList.push(t);\n      }\n    }, this);\n    // Combine all leaves of the same species together.\n    treeFoliageBucket.forEach((bucket) => {\n      if (bucket && bucket.length) {\n        countStart += bucket.length;\n        countFinal++;\n        let t = BABYLON.Mesh.MergeMeshes(bucket, true, true, null, true);\n        // this._shaddows.getShadowMap().renderList.push(t);\n      }\n    }, this);\n\n    console.log(\"Tree component count before _consolidateTrees: %c\" +\n                countStart.toString(),\n                \"background: orange; color: white\");\n    console.log(\"Mesh count after _consolidateTrees: %c\" +\n                this._scene.meshes.length.toString(),\n                \"background: orange; color: white\");\n    console.log(\"Tree component count after _consolidateTrees: %c\" +\n                countFinal.toString(),\n                \"background: orange; color: white\");\n  }\n\n  _createGroundCover() : BABYLON.StandardMaterial {\n    let flowers = [\n      \"greenery1.png\",\n      \"greenery2.png\",\n      \"greenery3.png\",\n      \"greenery4.png\",\n      \"greenery5.png\",\n      \"greenery6.png\",\n      \"greenery7.png\",\n      \"greenery8.png\",\n    ];\n    let image = this._groundCoverTypes.length;\n\n    let decalMaterial = new BABYLON.StandardMaterial(flowers[image], this._scene);\n    decalMaterial.diffuseTexture = new BABYLON.Texture(\n      \"textures/groundcover/\" + flowers[image], this._scene);\n    decalMaterial.diffuseTexture.hasAlpha = true;\n    decalMaterial.zOffset = -Math.round(this._groundCoverTypes.length / 2 + 1);\n    decalMaterial.specularColor = new BABYLON.Color3(0, 0, 0);\n      decalMaterial.disableDepthWrite = false;\n      decalMaterial.forceDepthWrite = true;\n\n    return decalMaterial;\n  }\n\n  _applyGroundCover(x: number, y: number) : void {\n    for (let i = 0; i < Math.random() * 3; i++) {\n      let decalScale = 20 + Math.random() * 40;\n      let decalSize = BABYLON.Vector3.One().scale(decalScale);\n      let decalRotate = Math.PI * 2 * Math.random();\n      let newDecal = BABYLON.MeshBuilder.CreateDecal(\n        \"groundCover_\" + x + \"_\" + y,\n        this._ground,\n        {\n          position: new BABYLON.Vector3(x, 0, y),\n         normal: new BABYLON.Vector3(0, 1, 0),\n         size: decalSize,\n         angle: decalRotate\n        });\n\n      let materialIndex = Math.round(Math.random() * (this._groundCoverTypes.length - 1));\n      let proposedMaterial = this._groundCoverTypes[materialIndex];\n      let decalHeight = proposedMaterial.zOffset;\n\n      // Check the proposed material does not clash with an overlapping material\n      // at the same zOffset.\n      let noConflict = true;\n      for (let decalCoverX = x - Math.round(decalScale / 2);\n          decalCoverX < x + Math.round(decalScale / 2) && noConflict;\n          decalCoverX++) {\n        for (let decalCoverY = y - Math.round(decalScale / 2);\n            decalCoverY < y + Math.round(decalScale / 2);\n            decalCoverY++) {\n          let key = \"\" + decalCoverX + \"_\" + decalCoverY + \"_\" + decalHeight;\n          if (this._groundCover[key]) {\n            // Already exists.\n            noConflict = false;\n            break;\n          }\n        }\n      }\n\n      if (noConflict) {\n        newDecal.material = proposedMaterial;\n        // Set a record of where this decal covers and at what zOffset.\n        for (let decalCoverX = x - Math.round(decalScale / 2);\n            decalCoverX < x + Math.round(decalScale / 2) && noConflict;\n            decalCoverX++) {\n          for (let decalCoverY = y - Math.round(decalScale / 2);\n              decalCoverY < y + Math.round(decalScale / 2);\n              decalCoverY++) {\n            let key = \"\" + decalCoverX + \"_\" + decalCoverY + \"_\" + decalHeight;\n            this._groundCover[key] = true;\n          }\n        }\n      } else {\n        newDecal.dispose();\n      }\n    }\n  }\n}\n\ninterface CameraDescription {\n  name: string;\n  camera: BABYLON.Camera;\n}\n\nclass Camera {\n  private _canvas: HTMLCanvasElement;\n  private _scene: BABYLON.Scene;\n  private _cameraArc: BABYLON.ArcRotateCamera;\n  private _cameraUniversal: BABYLON.UniversalCamera;\n  private _cameraFollow: BABYLON.FollowCamera;\n  //private _selectedActor: 0;\n  private _target: BABYLON.Mesh;\n\n  readonly cameras: CameraDescription[];\n\n  constructor(canvas: HTMLCanvasElement, scene: BABYLON.Scene, actors: Character[]) {\n    this._canvas = canvas;\n    this._scene = scene;\n    this.cameras = [];\n\n    this._target = BABYLON.MeshBuilder.CreateSphere(\n      \"targetCamera\", {diameterX: 0.1, diameterY: 0.1, diameterZ: 0.1}, this._scene);\n    this._target.position = new BABYLON.Vector3(100, 40, 100);\n\n    this._cameraArc = new BABYLON.ArcRotateCamera(\n      \"ArcRotateCamera\", 0, 0, 2, new BABYLON.Vector3(0, 30, 0), this._scene);\n    this._cameraArc.setPosition(new BABYLON.Vector3(5, 17, 30));\n    this._cameraArc.minZ = 0.5;\n    this._cameraArc.maxZ = 800;\n    this._cameraArc.lowerBetaLimit = 0.1;\n    this._cameraArc.upperBetaLimit = (Math.PI / 2) - 0.1;\n    this._cameraArc.lowerRadiusLimit = 2;\n    this._cameraArc.attachControl(this._canvas, true, false);\n    this._cameraArc.setTarget(this._target.position);\n    this._scene.activeCamera = this._cameraArc;\n    this.cameras.push({\"name\": \"ArcRotate\", \"camera\": this._cameraArc});\n\n    this._cameraUniversal = new BABYLON.UniversalCamera(\n      \"UniversalCamera\", new BABYLON.Vector3(0, 0, - 10), this._scene);\n    this._cameraUniversal.setTarget(this._target.position);\n    this.cameras.push({\"name\": \"Universal\", \"camera\": this._cameraUniversal});\n\n    this._cameraFollow = new BABYLON.FollowCamera(\n      \"FollowCamera\", new BABYLON.Vector3(0, 1, - 10), this._scene);\n    this._cameraFollow.radius = 10;\n    this._cameraFollow.heightOffset = 1;\n    this._cameraFollow.rotationOffset = 180 / 4;\n    this._cameraFollow.cameraAcceleration = 0.02;\n    this._cameraFollow.maxCameraSpeed = 20;\n    this._cameraFollow.attachControl(this._canvas, true);\n    this._cameraFollow.lockedTarget = this._target;\n    //this._cameraFollow.lowerRadiusLimit = 3;\n    //this._cameraFollow.lowerHeightOffsetLimit = 1;\n    this.cameras.push({\"name\": \"Follow\", \"camera\": this._cameraFollow});\n\n    this._scene.onBeforeRenderObservable.add(() => {\n      if (this._cameraArc.getTarget() != this._target.position) {\n        this._cameraArc.setTarget(this._target.position);\n      }\n      //this._cameraArc.rebuildAnglesAndRadius();\n    });\n  }\n\n  setTarget(targetPosition: BABYLON.Vector3) {\n    //this._cameraArc.setTarget(targetPosition);\n    //this._cameraUniversal.setTarget(targetPosition);\n\n    let animation = new BABYLON.Animation(\n      \"cameraTargetEase\",\n      \"position\",\n      30,\n      BABYLON.Animation.ANIMATIONTYPE_VECTOR3,\n      BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE);\n\n    // Animation keys\n    var keys = [];\n    keys.push({ frame: 0, value: this._target.position });\n    keys.push({ frame: 120, value: targetPosition });\n    animation.setKeys(keys);\n\n    var easingFunction = new BABYLON.CircleEase();\n    easingFunction.setEasingMode(BABYLON.EasingFunction.EASINGMODE_EASEINOUT);\n    animation.setEasingFunction(easingFunction);\n    this._target.animations.push(animation);\n    this._scene.beginAnimation(this._target, 0, 120, false);\n\n  }\n\n  setEnabled(camera: CameraDescription): void {\n    console.log(camera, this._scene.activeCamera.name);\n    if (this._scene.activeCamera.name == \"UniversalCamera\") {\n      // Move the camera target in front of old camera to allow for animation to\n      // new camera orientation.\n      let distance = BABYLON.Vector3.Distance(\n        this._cameraUniversal.position, this._cameraArc.target);\n      this._target.position = this._cameraUniversal.getFrontPosition(distance);\n      this.setTarget(new BABYLON.Vector3(0, 0, 0));\n    }\n    this._cameraArc.detachControl(this._canvas);\n    this._cameraUniversal.detachControl(this._canvas);\n    this._cameraFollow.detachControl(this._canvas);\n\n    // Set the new camera.\n    if (camera.name === \"ArcRotate\") {\n      this._cameraArc.setPosition(this._scene.activeCamera.position);\n      this._cameraArc.rebuildAnglesAndRadius();\n      this._cameraArc.attachControl(this._canvas, true, false);\n      this._scene.activeCamera = this._cameraArc;\n    } else if (camera.name === \"Universal\") {\n      this._cameraUniversal.attachControl(this._canvas, true);\n      this._cameraUniversal.position = this._scene.activeCamera.position;\n      this._cameraUniversal.setTarget(this._target.position);\n      this._scene.activeCamera = this._cameraUniversal;\n    } else if (camera.name === \"Follow\") {\n      this._cameraFollow.position = this._scene.activeCamera.position;\n      this._scene.activeCamera = this._cameraFollow;\n\n      this._cameraFollow.inputs.attachInput(\n        this._cameraFollow.inputs.attached.FollowCameraControls);\n      this._cameraFollow.attachControl(this._canvas, true);\n      console.log(this._cameraFollow.inputs);\n    }\n  }\n}\n\nclass Game {\n  private _canvas: HTMLCanvasElement;\n  private _engine: BABYLON.Engine;\n  private _scene: BABYLON.Scene;\n  private _light: BABYLON.DirectionalLight;\n  private _skybox: BABYLON.Mesh;\n  private _actors: Character[];\n  private _camera: Camera;\n\n  constructor(canvasElement : string) {\n    // Create canvas and engine.\n    this._canvas = document.getElementById(canvasElement) as HTMLCanvasElement;\n    this._engine = new BABYLON.Engine(this._canvas, true);\n    this._actors = [];\n  }\n\n  createScene() : void {\n    BABYLON.SceneLoader.CleanBoneMatrixWeights = true;\n    this._scene = new BABYLON.Scene(this._engine);\n    this._scene.ambientColor = new BABYLON.Color3(0.3, 0.3, 0.3);\n\n    // Fog\n    this._scene.fogMode = BABYLON.Scene.FOGMODE_EXP2;\n    this._scene.fogColor = new BABYLON.Color3(0.2, 0.2, 0.2);\n    this._scene.fogDensity = 0.003;\n\n    // Skybox\n    this._skybox = BABYLON.Mesh.CreateBox(\"skyBox\", 1000.0, this._scene);\n    this._skybox.scaling.y = 0.125;\n    var skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", this._scene);\n    skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(\"textures/skybox\", this._scene);\n    skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\n    skyboxMaterial.diffuseColor = new BABYLON.Color3(0, 0, 0);\n    skyboxMaterial.specularColor = new BABYLON.Color3(0, 0, 0);\n    skyboxMaterial.disableLighting = true;\n    skyboxMaterial.backFaceCulling = false;\n    this._skybox.material = skyboxMaterial;\n    this._skybox.setEnabled(false);\n\n    // Lighting\n    this._light = new BABYLON.DirectionalLight(\n      \"dir01\", new BABYLON.Vector3(0, -0.5, - 1.0), this._scene);\n    this._light.position = new BABYLON.Vector3(20, 150, 70);\n    let sun = BABYLON.MeshBuilder.CreateSphere(\"sun\", {}, this._scene);\n    sun.position = this._light.position;\n\n    // Camera\n    this._camera = new Camera(this._canvas, this._scene, this._actors);\n\n    // Ground\n    let ground = BABYLON.Mesh.CreateGround(\"ground\", 1000, 1000, 1, this._scene, false);\n    let groundMaterial = new BABYLON.StandardMaterial(\"ground\", this._scene);\n    groundMaterial.diffuseTexture = new BABYLON.Texture(\"textures/grass.png\", this._scene);\n    (<BABYLON.Texture>groundMaterial.diffuseTexture).uScale = 64;\n    (<BABYLON.Texture>groundMaterial.diffuseTexture).vScale = 64;\n    groundMaterial.diffuseColor = new BABYLON.Color3(0.4, 0.4, 0.4);\n    groundMaterial.specularColor = new BABYLON.Color3(0, 0, 0);\n    ground.material = groundMaterial;\n    ground.receiveShadows = true;\n\n    // Shadows\n    let shadowGenerator = new BABYLON.ShadowGenerator(1024, this._light);\n\n    // Scenery\n    let scenery = new Scenery(this._scene, shadowGenerator, ground, 256);\n    scenery.calculatePath({\"x\": 255, \"y\": 255}, {\"x\": 0, \"y\": 0});\n\n    this._scene.onPointerDown = function(evt, pickResult) {\n        // if the click hits the ground object, we change the impact position\n        if (pickResult.hit) {\n            targetHead.position.x = pickResult.pickedPoint.x;\n            targetHead.position.y = pickResult.pickedPoint.y;\n            targetHead.position.z = pickResult.pickedPoint.z;\n        }\n    };\n\n    // Meshes\n    // World positions: (l/r, u/d, f/b)\n    // let debugBase = BABYLON.MeshBuilder.CreateBox(\"debugBase\", {height: 0.01, width: 0.5, depth: 1}, this._scene);\n    // debugBase.receiveShadows = true;\n\n    // Moving ball for the fox to watch.\n    let targetHead = BABYLON.MeshBuilder.CreateSphere(\n      \"targetHead\", {diameterX: 0.01, diameterY: 0.01, diameterZ: 0.01}, this._scene);\n    targetHead.position = this._light.position.clone();\n    shadowGenerator.getShadowMap().renderList.push(targetHead);\n    // Fox\n    let fox = new Character(this._scene, shadowGenerator, FOX, () => {\n      console.log(\"fox loaded\");\n      this._camera.setTarget(fox.position);\n      fox.lookAt(targetHead.position);\n      fox.rotation.y = Math.PI;\n    });\n    this._actors.push(fox);\n    // Star\n    let star = new Star(this._scene, scenery);\n    star.mesh.position = new BABYLON.Vector3(0, 5, 0);\n\n    setTimeout(function() {\n      console.log(\"Add animations.\");\n      //this._animationQueue.push({name: \"stationary\", loop: false, reversed: false});\n      fox.queueAnimation({name: \"crouch\", loop: false, reversed: false});\n      fox.queueAnimation({name: \"crouch\", loop: false, reversed: true});\n      //this._animationQueue.push({name: \"stationary\", loop: true, reversed: false});\n    }.bind(this), 10000);\n\n    setTimeout(function() {\n      console.log(\"Add crouch animation.\");\n      fox.queueAnimation({name: \"crouch\", loop: false, reversed: false});\n      fox.queueAnimation({name: \"crouch\", loop: false, reversed: true});\n    }.bind(this), 20000);\n\n    setTimeout(function() {\n      console.log(\"Add walk animation.\");\n      fox.queueAnimation({name: \"walk\", loop: true, reversed: false});\n    }.bind(this), 30000);\n\n    this.controlPannel();\n    console.log(\"Total meshes in scene: %c\" +\n                this._scene.meshes.length.toString(),\n                \"background: orange; color: white\");\n  }\n\n  doRender() : void {\n    // Run the render loop.\n    this._engine.runRenderLoop(() => {\n      this._scene.render();\n      let fpsLabel = document.getElementById(\"fpsLabel\");\n      fpsLabel.innerHTML = this._engine.getFps().toFixed() + \" fps\";\n    });\n\n    // The canvas/window resize event handler.\n    window.addEventListener('resize', () => {\n      this._engine.resize();\n    });\n    window.addEventListener(\"orientationchange\", () => {\n      this._engine.resize();\n    });\n  }\n\n  controlPannel() : void {\n    let advancedTexture = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\n\n    let grid = new BABYLON.GUI.Grid();\n    grid.addColumnDefinition(10, true);\n    grid.addColumnDefinition(200, true);\n    grid.addRowDefinition(20, true);\n    grid.addRowDefinition(20, true);\n    this._camera.cameras.forEach((camera) => {\n      grid.addRowDefinition(20, true);\n    });\n    advancedTexture.addControl(grid);\n    let gridcount = 0;\n\n    let panel = new BABYLON.GUI.StackPanel();\n    panel.width = \"220px\";\n    panel.fontSize = \"14px\";\n    panel.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_RIGHT;\n    panel.verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_CENTER;\n\n    let checkbox = new BABYLON.GUI.Checkbox();\n    checkbox.width = \"20px\";\n    checkbox.height = \"20px\";\n    checkbox.isChecked = false;\n    checkbox.color = \"green\";\n    checkbox.onIsCheckedChangedObservable.add((value) => {\n      console.log(\"%c SkyBox:\", \"background: blue; color: white\", value);\n      this._skybox.setEnabled(value);\n    });\n    grid.addControl(checkbox, gridcount, 0);\n\n    let header = BABYLON.GUI.Control.AddHeader(\n      checkbox, \"SkyBox\", \"180px\", { isHorizontal: true, controlFirst: true});\n    header.color = \"white\";\n    header.height = \"20px\";\n    header.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;\n    grid.addControl(header, gridcount++, 1);\n\n    let checkbox2 = new BABYLON.GUI.Checkbox();\n    checkbox2.width = \"20px\";\n    checkbox2.height = \"20px\";\n    checkbox2.isChecked = true;\n    checkbox2.color = \"green\";\n    checkbox2.onIsCheckedChangedObservable.add((value) => {\n      console.log(\"%c Fog:\", \"background: blue; color: white\", value);\n      if (value) {\n        this._scene.fogMode = BABYLON.Scene.FOGMODE_EXP2;\n      } else {\n        //this._scene.fogMode = BABYLON.Scene.FOGMODE_LINEAR;\n        //this._scene.fogStart = 100.0;\n        //this._scene.fogEnd = 200.0;\n        this._scene.fogMode = BABYLON.Scene.FOGMODE_NONE;\n      }\n    });\n    grid.addControl(checkbox2, gridcount, 0);\n\n    let header2 = BABYLON.GUI.Control.AddHeader(\n      checkbox2, \"Fog\", \"180px\", { isHorizontal: true, controlFirst: true});\n    header2.color = \"white\";\n    header2.height = \"20px\";\n    header2.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;\n    grid.addControl(header2, gridcount++, 1);\n\n    this._camera.cameras.forEach((camera) => {\n      let radio = new BABYLON.GUI.RadioButton();\n      radio.width = \"20px\";\n      radio.height = \"20px\";\n      radio.color = \"green\";\n      radio.isChecked = (camera.name === \"ArcRotate\");\n      radio.onIsCheckedChangedObservable.add((state) => {\n        console.log(camera.name, state);\n        if (state) {\n          this._camera.setEnabled(camera);\n        }\n      });\n      grid.addControl(radio, gridcount, 0);\n\n      let radioHead = BABYLON.GUI.Control.AddHeader(\n        radio, \"Camera: \" + camera.name, \"180px\", { isHorizontal: true, controlFirst: true});\n      radioHead.color = \"white\";\n      radioHead.height = \"20px\";\n      radioHead.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;\n      grid.addControl(radioHead, gridcount++, 1);\n    }, this);\n  }\n}\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  // Create the game using the 'renderCanvas'.\n  let game = new Game('renderCanvas');\n\n  // Create the scene.\n  game.createScene();\n\n  // Start render loop.\n  game.doRender();\n});\n"],"sourceRoot":"./"}